#ifndef DS_NET_IQOS1X_IDL
#define DS_NET_IQOS1X_IDL

/*qidl copyright nested=false
============================================================================
               Copyright (c) 2008-2010 Qualcomm Technologies, Inc.
                            All Rights Reserved.
                    Qualcomm Technologies Confidential and Proprietary
============================================================================
*/

#include "AEEIQI.idl"
#include "AEEStdDef.idl"

module ds
{
   module Net
   {
      const AEEIID AEEIID_IQoS1x = 0x0106d74b;
      /**
       * ds Net 1x QoS interface.
       * This interface provides 1x-specific operations on a QoS link.
       * This Object is received from IQoSSecondary/IQoSDefault via
       * GetTechObject.
       */
      interface IQoS1x : IQI
      {
         /**
          * This struct defines the type for RMAC3 information.
          */
         struct RMAC3InfoType 
         {
            long headroomPayloadSize;    /**< PA headroom limited payload size in bytes. */
            long bucketLevelPayloadSize; /**< BucketLevel equivalent payload size in bytes. */
            long t2pInflowPayloadSize;   /**< T2PInflow equivalent payload size in bytes. */
         };

         /**
          * This attribute represents the MAC layer information for the QoS flow.          
          */
         readonly attribute RMAC3InfoType RMAC3Info;

         /**
          * This attribute represents the status of the data transmission for the QoS flow.
          * If there is an error in transmission of data because of the two reasons listed below,
          * then the attribute will be FALSE, otherwise it will be TRUE.
          * Reasons for transmission error:
          *  - Physical Layer Transmission error (M-ARQ)
          *  - Data has become stale (by remaining in transmit watermark for too long) and thus
          *    discarded before a transmission is even attempted.          
          */
         readonly attribute boolean TXStatus;

         /**
          * This attribute represents the value of the inactivity timer of the associated QoS instance.
          * If data is not transmitted on this QoS instance for the specified inactivity timer value,
          * the traffic channel is released in order to conserve resources.
          * Although the attribute's name implies that there is a timer per every QoS instance, there
          * is only a timer per traffic channel. Since more than one QoS instance can be multiplexed
          * on to the same traffic channel, the largest value of all inactivity timer values is used
          * to start the inactivity timer.          
          */
         attribute long InactivityTimer;
      };
   };// module Net
};// module ds
#endif /* #ifdef DS_NET_IQOS1X_IDL */
