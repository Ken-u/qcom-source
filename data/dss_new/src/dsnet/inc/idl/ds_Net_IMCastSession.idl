#ifndef DS_NET_IMCASTSESSION_IDL
#define DS_NET_IMCASTSESSION_IDL

/*qidl copyright nested=false
============================================================================
               Copyright (c) 2008-2010 Qualcomm Technologies, Inc.
                            All Rights Reserved.
                    Qualcomm Technologies Confidential and Proprietary
============================================================================
*/

#include "AEEStdDef.idl"

#include "ds_Net_IEventManager.idl"

#include "ds_Net_MCast_Def.idl"

module ds
{
   module Net
   {
      module MCastSessionEvent
      {
        /**
         * QDS_EV_REGISTRATION_STATE: Register to this event to be notified
         * on changes in the registration state of this MCast Session.
         * Registration state change information contains both a sepcification
         * of the new registration state and an information code (status code
         * that may specify further information such as registration failure
         * reason.
         * @See MCastStateChangedType, MCastRegStateType, MCastInfoCodeType
         */
        const EventType QDS_EV_REGISTRATION_STATE  = 0x0106e60d;

        /**
         * QDS_EV_TECHNOLOGY_STATUS: Register to this event to be notified
         * on status changes of this MCast Session. 
         * @See MCastInfoCodeType
         */
        const EventType QDS_EV_TECHNOLOGY_STATUS   = 0x0106e60e;
      };

      const AEEIID AEEIID_IMCastSession = 0x0106cf95;
      /**
       * ds Net MultiCast interface.
       * Events that can be registered on this interface via OnStateChange (as part of IEventManager interface): 
       * - ds::Net::MCastSessionEvent::REGISTRATION_STATE. Use
       *   GetRegStateAndInfoCode to fetch the state information.
       * - ds::Net::MCastSessionEvent::TECHNOLOGY_STATUS. Use
       *   GetTechnologyStatus to fetch the status information.
       */
      interface IMCastSession : IEventManager
      {
         /**
          * This function issues a request for leaving a multicast group.
          * @retval AEE_SUCCESS Request received successfully.
          * @retval Other ds designated error codes might be returned.
          * @see ds_Errors_Def.idl.
          */
         AEEResult Leave();

         /**
          * This attribute indicates the MCast session registration state and
          * information code.
          */
         readonly attribute MCastStateChangedType RegStateAndInfoCode;

         /**
          * This attribute indicates the information code for the status of the
          * MCast technology session.
          */
         readonly attribute MCastInfoCodeType TechStatusInfoCode;
      };
   };// module Net
};// module ds
#endif /* #ifdef DS_NET_IMCASTSESSION_IDL */
