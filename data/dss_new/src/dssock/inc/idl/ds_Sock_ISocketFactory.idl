#ifndef DS_SOCK_ISOCKETFACTORY_IDL
#define DS_SOCK_ISOCKETFACTORY_IDL

/*qidl copyright nested=false
============================================================================
               Copyright (c) 2008-2010 Qualcomm Technologies, Inc.
                            All Rights Reserved.
                    Qualcomm Technologies Confidential and Proprietary
============================================================================
*/

#include "AEEIQI.idl"
#include "AEEStdDef.idl"
#include "ds_Sock_Def.idl"
#include "ds_Sock_ISocket.idl"
#include "ds_Net_IPolicy.idl"
#include "ds_Net_INetwork.idl"

module ds
{
   module Sock
   {
      const AEEIID AEEIID_ISocketFactory = 0x0106d84a;
      interface ISocketFactory : IQI
      {
         /**
          * This function creates an instance of ISocket. ISocket creation is
          * supported only via ISocketFactory.
          * @param family Address Family of the socket (ds::AF_*). Only
          *               QDS_AF_INET and QDS_AF_INET6 are supported.    
          * @param sockType Socket Type (ds::Sock::SOCKTYPE_*).
          * @param protocol Protocol Type (ds::Sock::PROTOCOL_*).
          * @param policy Network policy. If NULL, default network policy shall
          *               be used for the relevant socket operations when those
          *               are applied on the socket.
          * @param autoBringUp TRUE: The application wants to create a socket
          *                          that has an automatic behavior in respect
          *                          to Network interface relationship i.e. a
          *                          socket that takes care to automatically
          *                          bring up the Network interface when
          *                          applicable socket operations are applied
          *                          on it. The application should not make 
          *                          assumptions in regard to which Network
          *                          interface the socket is operating on,
          *                          beyond the requirement the application
          *                          posed by specification of the Network 
          *                          policy provided to this API.
          *                    FALSE: The Application is responsible to have
          *                           Network interface(s) brought up before 
          *                           applying applicable operations on the 
          *                           socket. The socket may operate on
          *                           different network interfaces.
          * @param newSocket Output The newly created ISocket instance.
          * @retval AEE_SUCCESS ISocket created successfully.
          * @retval Other ds designated error codes might be returned.
          * @see ds_Errors_Def.idl.
          */
         AEEResult CreateSocket(in   AddrFamilyType    family,
                                in   SocketType        sockType,
                                in   ProtocolType      protocol,
                                in   ds::Net::IPolicy  policy,
                                in   boolean           autoBringUp,
                                rout ISocket           newSocket);

         /**
          * This function creates an instance of ISocket. ISocket creation is
          * supported only via ISocketFactory. In this API the Application
          * specifies an ACTIVE mode Network object as a reference for the
          * socket creation. It is guaranteed that the produced socket shall be
          * associated to the same underlying network interface as the one used
          * for the INetwork object. This way it is guaranteed that any
          * configurations applied on the INetwork object shall be applicable
          * for the created socket as long as those configurations do not
          * change.
          * If the underlying network interface associated with the provided
          * network object goes DOWN (either due to release of the network
          * object by the application or because of another reason) socket
          * operations applied on the socket shall fail.
          * @param family Address Family of the socket (ds::AF_*). Only
          *               QDS_AF_INET and QDS_AF_INET6 are supported. Must be
          *               compatible to the Network object.   
          * @param sockType Socket Type (ds::Sock::SOCKTYPE_*).
          * @param protocol Protocol Type (ds::Sock::_PROTOCOL_*).
          * @param network Network object to be used as a reference for the
          *                creation of the socket.
          * @param newSocket Output The newly created ISocket instance.
          * @retval AEE_SUCCESS ISocket created successfully.
          * @retval Other ds designated error codes might be returned.
          * @see ds_Errors_Def.idl.
          */
         AEEResult CreateSocketByNetwork(in   AddrFamilyType      family,
                                         in   SocketType          sockType,
                                         in   ProtocolType        protocol,
                                         in   ds::Net::INetwork   network,
                                         rout ISocket             newSocket);

      };
   };// module Sock
};// module ds

#endif /* #ifndef DS_SOCK_ISOCKETFACTORY_IDL */
